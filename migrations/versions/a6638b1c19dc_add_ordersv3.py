"""add ordersv3

Revision ID: a6638b1c19dc
Revises: 
Create Date: 2023-12-20 15:02:31.796136

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6638b1c19dc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_notification_product_id', table_name='notification')
    op.drop_index('ix_notification_user_id', table_name='notification')
    op.drop_table('notification')
    op.drop_table('notified_users')
    op.add_column('order', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('order', sa.Column('delivery_type', sa.String(), nullable=True))
    op.add_column('order', sa.Column('delivery_location', sa.String(), nullable=True))
    op.add_column('order', sa.Column('payment_method', sa.String(), nullable=True))
    op.add_column('order', sa.Column('delivery_date', sa.TIMESTAMP(), nullable=True))
    op.add_column('order', sa.Column('created_at', sa.TIMESTAMP(), nullable=True))
    op.create_foreign_key(None, 'order', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'order', type_='foreignkey')
    op.drop_column('order', 'created_at')
    op.drop_column('order', 'delivery_date')
    op.drop_column('order', 'payment_method')
    op.drop_column('order', 'delivery_location')
    op.drop_column('order', 'delivery_type')
    op.drop_column('order', 'user_id')
    op.create_table('notified_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='notified_users_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notified_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notified_users_pkey')
    )
    op.create_table('notification',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='notification_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='notification_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notification_pkey')
    )
    op.create_index('ix_notification_user_id', 'notification', ['user_id'], unique=False)
    op.create_index('ix_notification_product_id', 'notification', ['product_id'], unique=False)
    # ### end Alembic commands ###
